When I say pass a decimal value, I am referring to using a double.


1. Write a function to find the sum of two integers. Pass two integers as arguments and return the sum to main to be printed.


2. Create a function to calculate the average of three decimal numbers. Pass three decimal values as arguments and return the average to be printed.


3.  Implement a function to check if a given number is even or odd. Pass an integer as an argument and print whether it is even or odd. DO NOT RETURN a value.


4.  Write a function to convert a temperature in Fahrenheit to Celsius. Pass a decimal value as an argument and return the converted value to be printed.


5.  Write a function to find the minimum element in an array of integers. Pass an array as an argument to the function and print out the minimum element ONLY. DO NOT RETURN a value.


6. Implement a function to compute the factorial of a non-negative integer. Pass a non-negative integer as an argument. Return the factorial value to be printed.


7. Create a function to calculate the square of a given number. Take a decimal value as an argument and return the square of it to be printed.


8.  Implement a function to find the sum of all elements in an array. Pass an integer array as an argument and print out the sum. DO NOT RETURN a value.


9.  Write a function to find the largest prime number smaller than a given positive integer. Pass a positive integer as an argument and print out the nearest prime number. DO NOT RETURN a value.


10.  Write a function to calculate the area of a triangle given the lengths of its three sides. Use Heron’s formula. Pass three decimal values and return the final value to be printed.


11.  Implement a function to find the second largest element in an array of integers. Pass an integer array and return the second largest element to be printed.


12.  Write a program to find the sum of all elements in an integer array. Pass an integer array and return the sum of all the elements to be printed.


13.  Create a program to calculate the average of elements in a floating-point array. Print out the average. 


14.  Write a program to count the number of even and odd elements in an integer array. Print out both the count for the even and the odd numbers.


15.  Create a program to check if a given number exists in an array. Print out whether the number specified does or does not exist in the array. 


16.  Implement a program to reverse the order of elements in an integer array. Therefore, if the array holds the values 1,2,3 after the program runs it should hold 3,2,1. Print out the reversed array.


17.  Create a program to check if an array is sorted in ascending order. Ascending Order: 1,2,3,4, etc. Print out whether the integers in the array are in ascending order or not.


18.  Write a program to find the index of a specific element in an array. For example, for an array that holds the values 1,2,3, if I am searching for the value 2, then the program should return that it is located at index 1. If the value exists in the array, print out the index. If it does not exist, print out the value does not exist.


19.  Create a program to count the number of occurrences of a given character in an array of characters. Print out the letter you are looking for and how many times it occurred in the array.


20.  Implement a program to find the average of elements at even and odd indices in an array of integers separately. Count index 0 as an even number. For example, if I had an array of values 1,2,3,4, the even index values (0 and 2) hold the values 1 and 3. The odd index values (1 and 3) hold the values 2 and 4. Therefore the average of the even index values is (1 + 3) / 2 = 2 and the average of the odd index values is (2 + 4) / 2 = 3. Print out the average for both the even and odd indices. 


21.  Write a program to copy the elements of one integer array into another array. For example, if I have an array that contains 1,2,3, and then I have an empty array. When I copy the values of the first array to the empty one, I am placing the exact values of the first array into the exact same corresponding indices for the empty array. So after you're done copying, the previously empty array should look identical to the original array. Meaning it should look like 1,2,3 as well.


22.  Create a program to find the product of all elements in a floating-point array. Print out the product.


23. Implement a program to check if an array is a palindrome (reads the same forward and backward). For example, the array 1,2,3,2,1 would be considered a palindrome. The array 1,4,5,6,1 would NOT be considered a palindrome.


24.  Write a program to find the prime numbers in an integer array. Print out each prime number found.


25.  Create a program to shift the elements of an integer array to the left by 1 position. The element at the end of the array should “wrap around” and become the first element. Print out the shifted array.


26.  Implement a program to check if an array contains duplicate elements. Print out whether the array contains duplicate elements or does not.


27.  Create a program to sort an array of integers in ascending order using the bubble sort algorithm. Sort in ascending order. Print out the array in its new, ascending order format.


28.  Implement a program to find the median of elements in an integer array. Print out the median value. (Hint. Use the bubble sort from the previous question to sort array)


29.  Write a program to count the number of vowels in an array of characters. Print out the numbers of vowels in the array.


30.  Create a program to find the difference between the maximum and minimum elements in an integer array. Print out the difference.